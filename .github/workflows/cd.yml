name: Magento CD

on:
  push:
    branches:
      - main
      - develop

jobs:
  magento-ci:
    name: Build Magento Project
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: magento
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=5

      opensearch:
        image: opensearchproject/opensearch:2.11.1
        env:
          discovery.type: single-node
          OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m"
          bootstrap.memory_lock: "true"
          plugins.security.disabled: "true"
        ports:
          - 9200:9200
        options: >-
          --health-cmd "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"'"
          --health-interval 10s
          --health-timeout 120s
          --health-retries 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP 8.3
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: bcmath, ctype, curl, dom, gd, intl, mbstring, openssl, pdo_mysql, simplexml, soap, xsl, zip, sockets, fileinfo, json, tokenizer, iconv, xmlwriter
          tools: composer:v2, phpunit, phpcs
          ini-values: post_max_size=512M, upload_max_filesize=512M, memory_limit=2G
          coverage: none

      - name: Clear existing Composer auth
        run: composer config --global --unset http-basic.repo.magento.com || true

      - name: Set up Magento Composer Auth
        run: composer config --global http-basic.repo.magento.com '${{ secrets.MAGENTO_PUBLIC_KEY }}' '${{ secrets.MAGENTO_PRIVATE_KEY }}'


      - name: Install dependencies
        run: composer install --no-progress --prefer-dist

      - name: Set file permissions
        run: chmod -R 777 var/ pub/ generated/

      - name: Install Magento
        run: |
          php bin/magento setup:install \
            --base-url=http://localhost \
            --db-host=127.0.0.1 \
            --db-name=magento \
            --db-user=root \
            --db-password=root \
            --admin-firstname=Admin \
            --admin-lastname=User \
            --admin-email=admin@example.com \
            --admin-user=admin \
            --admin-password=admin123 \
            --language=en_US \
            --currency=USD \
            --timezone=UTC \
            --use-rewrites=1 \
            --search-engine=opensearch \
            --opensearch-host=127.0.0.1 \
            --opensearch-port=9200
        
      - name: Compile and deploy
        run: |
          php bin/magento setup:di:compile
          php bin/magento setup:static-content:deploy -f
          php bin/magento cache:flush

      - name: Archive for deployment
        run: |
          zip -r magento-build.zip . -x "var/*" "pub/media/*" "vendor/*"
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: magento-build
          path: magento-build.zip

      # Optional: Cache Composer packages
      - name: Cache Composer
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Debug PR Info
        run: |
          echo "Triggered by: ${{ github.event_name }}"
          echo "PR Branch: ${{ github.head_ref }}"
          echo "Base Branch: ${{ github.base_ref }}"
          
